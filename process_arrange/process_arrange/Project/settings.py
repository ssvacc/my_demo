# -*- coding: utf-8 -*-
"""
Django settings for Project project.

Generated by 'django-admin startproject' using Django 2.0.9.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

import logging
import sys

import django.utils.log
import logging.handlers


import djcelery
from kombu import Queue, Exchange



djcelery.setup_loader()

BROKER_URL = 'redis://:K120Esc1@r-uf63c26510a32804.redis.rds.aliyuncs.com:6379/0'    #配置broker,使用redis的0数据库
BROKER_POOL_LIMIT = 0
CELERYD_CONCURRENCY = 4  # 并发worker数
CELERYD_PREFETCH_MULTIPLIER = 1 # woker预取任务数量1，不能设置为0,0为尽可能的取
TASK_ACKS_LATE = True
CELERY_RESULT_BACKEND='djcelery.backends.database:DatabaseBackend'  #配置backend,任务结果
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler' #定时任务
CELERYD_LOG_FILE = "/tmp/celery_log/celery.log"  # log路径
CELERYBEAT_LOG_FILE = "/tmp/celery_log/celerybeat.log"  # beat log路径
CELERY_ENABLE_UTC = False
CELERY_RESULT_SERIALIZER = 'json'
CELERYD_MAX_TASKS_PER_CHILD = 2 # 每个worker最大执行任务数

SERVER_IP_LIST = ['139.196.231.215', '106.14.79.183', '120.210.88.204']
IP_NET = 'https://myip.ipip.net'

# 任务队列
CELERY_QUEUE = (
    # Queue(name='default', exchange=Exchange('default'), routing_key='default'),
    Queue(name='py_store_statistics', exchange=Exchange('py_store_statistics'), routing_key='py_store_statistics'), #仓库每月同步数据
    Queue(name='real_time', exchange=Exchange('real_time'), routing_key='real_time'), #实时任务
    Queue(name='timing', exchange=Exchange('timing'), routing_key='timing'), #定时任务
    Queue(name='off_shelf', exchange=Exchange('off_shelf'), routing_key='off_shelf'), #下架任务
    Queue(name='wish_shopinfo', exchange=Exchange('wish_shopinfo'), routing_key='wish_shopinfo'), # Wish店铺任务
    Queue(name='wish_shop_manage', exchange=Exchange('wish_shop_manage'), routing_key='wish_shop_manage'), # Wish店铺任务
    Queue(name='on_shelf', exchange=Exchange('on_shelf'), routing_key='on_shelf'), #上架任务
    Queue(name='off_shelf_urgent', exchange=Exchange('off_shelf_urgent'), routing_key='off_shelf_urgent'), #紧急下架任务
    Queue(name='goodsbatchstate_redis', exchange=Exchange('goodsbatchstate_redis'), routing_key='goodsbatchstate_redis'), #批量同步商品库存、状态到redis
    Queue(name='kc_purchaser', exchange=Exchange('kc_purchaser'), routing_key='kc_purchaser'), #更新采购员数据
    Queue(name='web_crawler', exchange=Exchange('web_crawler'), routing_key='web_crawler'), #爬虫获取商品信息
    Queue(name='wish_refresh', exchange=Exchange('wish_refresh'), routing_key='wish_refresh'), #Wish定时任务队列
    Queue(name='wish_refresh_v2', exchange=Exchange('wish_refresh_v2'), routing_key='wish_refresh_v2'), #Wish定时任务队列
    Queue(name='ali_shop_manage', exchange=Exchange('ali_shop_manage'), routing_key='ali_shop_manage'), #AliExpress店铺管理任务队列
    Queue(name='amazon_upload', exchange=Exchange('amazon_upload'), routing_key='amazon_upload'), #亚马逊刊登任务队列
    Queue(name='amazon_transaction', exchange=Exchange('amazon_transaction'), routing_key='amazon_transaction'), #翻译队列
    Queue(name='py_modify', exchange=Exchange('py_modify'), routing_key='py_modify'), #修改普源任务队列
    Queue(name='get_saler_profit_data', exchange=Exchange('get_saler_profit_data'), routing_key='get_saler_profit_data'),# 获取绩效数据
    Queue(name='gen_execl_saler_profit_data', exchange=Exchange('gen_execl_saler_profit_data'), routing_key='gen_execl_saler_profit_data'),# 生成execl
    Queue(name='increment_lazada', exchange=Exchange('increment_lazada'), routing_key='increment_lazada'),
    Queue(name='shp_shop_manage', exchange=Exchange('shp_shop_manage'), routing_key='shp_shop_manage'), # Shopee同步店铺任务
    Queue(name='shopee_update_price', exchange=Exchange('shopee_update_price'), routing_key='shopee_update_price'), # Shopee单独的改价接口
    Queue(name='increment_shopee', exchange=Exchange('increment_shopee'), routing_key='increment_shopee'), # Shopee定时增量刷新店铺任务
    Queue(name='product_survey', exchange=Exchange('product_survey'), routing_key='product_survey'), # 产品反向开发流程
    Queue(name='updown_shopee', exchange=Exchange('updown_shopee'), routing_key='updown_shopee'), # Shopee店铺管理定时上下架(两小时一次)
    Queue(name='rakuten_product', exchange=Exchange('rakuten_product'), routing_key='rakuten_product'), # 德国乐天刊登任务
    Queue(name='shopee_publish_self', exchange=Exchange('shopee_publish_self'), routing_key='shopee_publish_self'), # Shopee同站点铺货
    Queue(name='shopee_order', exchange=Exchange('shopee_order'), routing_key='shopee_order'), # Shopee增量更新订单
    Queue(name='py_getgongzi_report', exchange=Exchange('py_getgongzi_report'), routing_key='py_getgongzi_report'),# 工资报表
    Queue(name='b_goods_sales_count', exchange=Exchange('b_goods_sales_count'), routing_key='b_goods_sales_count'),# SKU销量统计
    Queue(name='t_ad_info_reportform', exchange=Exchange('t_ad_info_reportform'), routing_key='t_ad_info_reportform'),# 导入广告数据
    Queue(name='increment_jumia', exchange=Exchange('increment_jumia'), routing_key='increment_jumia'), # Jumia定时增量刷新店铺任务
    Queue(name='updown_jumia', exchange=Exchange('updown_jumia'), routing_key='updown_jumia'), # Jumia店铺管理定时上下架(一天一次)
    # Queue(name='edit_publish_count', exchange=Exchange('edit_publish_count'), routing_key='edit_publish_count'), # sku申请实时更新其他数据
    Queue(name='walmart_shopinfo', exchange=Exchange('walmart_shopinfo'), routing_key='walmart_shopinfo'), # walmart 店铺增量刷新
    Queue(name='walmart_updown', exchange=Exchange('walmart_updown'), routing_key='walmart_updown'), # walmart 店铺上下架
    Queue(name='walmart_listing', exchange=Exchange('walmart_listing'), routing_key='walmart_listing'), # walmart 店铺listing刷新
    Queue(name='joybuy_shopinfo', exchange=Exchange('joybuy_shopinfo'), routing_key='joybuy_shopinfo'), # joybuy 店铺管理
    Queue(name='store_count', exchange=Exchange('store_count'), routing_key='store_count'), # 店铺数目
    Queue(name='syn_b_stockStatus', exchange=Exchange('syn_b_stockStatus'), routing_key='syn_b_stockStatus'), #海外仓 刷新已入库数据
    Queue(name='syn_b_goods', exchange=Exchange('syn_b_goods'), routing_key='syn_b_goods'), #b_goods 表数据同步、商品信息Redis同步、稽核数据
    Queue(name='wish_auto_update_inventory', exchange=Exchange('wish_auto_update_inventory'), routing_key='wish_auto_update_inventory'), # Wish自动刷新队列
    Queue(name='export_overhead_cost_statistics', exchange=Exchange('export_overhead_cost_statistics'), routing_key='export_overhead_cost_statistics'), # 亚马逊海外仓头程费用统计
    Queue(name='once_aday', exchange=Exchange('once_aday'), routing_key='once_aday'), # 按天刷新或按周刷新
    Queue(name='vova_shopinfo', exchange=Exchange('vova_shopinfo'), routing_key='vova_shopinfo'), # vova店铺管理
    Queue(name='add_binding', exchange=Exchange('add_binding'), routing_key='add_binding'), # SKU绑定关系同步普源
    Queue(name='shopify_info', exchange=Exchange('shopify_info'), routing_key='shopify_info'), # shopify店铺信息
    Queue(name='zoodmall_shopinfo', exchange=Exchange('zoodmall_shopinfo'), routing_key='zoodmall_shopinfo'), # zoodmall店铺管理
    Queue(name='ebay_work', exchange=Exchange('ebay_work'), routing_key='ebay_work'), # eBay任务队列
    Queue(name='shopify_static', exchange=Exchange('shopify_static'), routing_key='shopify_static'), # SHOPIFY店铺左侧栏数量数据队列
    Queue(name='cdis_shopinfo', exchange=Exchange('cdis_shopinfo'), routing_key='cdis_shopinfo'), # CD 店铺管理
    Queue(name='tort_auto_refresh_listing', exchange=Exchange('tort_auto_refresh_listing'), routing_key='tort_auto_refresh_listing'), # 侵权刷新到各平台在线链接的队列
    Queue(name='adjust_picture', exchange=Exchange('adjust_picture'), routing_key='adjust_picture'),  # 调整主图图片大小
    Queue(name='report_center_export_excel_queue', exchange=Exchange('report_center_export_excel_queue'), routing_key='report_center_export_excel_queue'),  # 下载中心导出任务
    Queue(name='report_center_export_excel_params_sql_queue', exchange=Exchange('report_center_export_excel_params_sql_queue'), routing_key='report_center_export_excel_params_sql_queue'),  # 下载中心导出任务
    Queue(name='report_center_export_excel_list_queue', exchange=Exchange('report_center_export_excel_list_queue'), routing_key='report_center_export_excel_list_queue'),  # 下载中心导出任务

)


DATA_UPLOAD_MAX_MEMORY_SIZE = 3621440000
DATA_UPLOAD_MAX_NUMBER_FIELDS = 102400
# 任务路由
from app_djcelery.tasks_routes import TASKS_LIST
CELERY_ROUTES = {}
for i in range(len(TASKS_LIST)):
    CELERY_ROUTES = dict(CELERY_ROUTES, **TASKS_LIST[i])

# CELERY_IGNORE_RESULT = True   # 丢弃任务结果
# CELERYD_TASK_TIME_LIMIT = 60    # 单个任务的运行时间不超过此值，否则会被SIGKILL 信号杀死,设置的值过小，任务会不执行完
# BROKER_TRANSPORT_OPTIONS = {'visibility_timeout': 90}
            #  任务发出后，经过一段时间还未收到acknowledge , 就将任务重新交给其他worker执行，设置的值过小，任务会被重复执行


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

sys.path.insert(0, os.path.join(BASE_DIR, 'extra_apps'))
sys.path.insert(0, os.path.join(BASE_DIR, 'alibaba_app'))

MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

EXCEL_ROOT = os.path.join(BASE_DIR, 'excel/')

MEDIA_URL = '/media/'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '3z85)=r$x%%s7il^c^u1p)t$l^^_qc2(xn7#movqj0(1-!go-i'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']

# dingding logout url
LOGOUT_REDIRECT_URL = '/login/'
SESSION_TIMEOUT_REDIRECT = '/login/'
LOGIN_URL = '/login/'

SESSION_SAVE_EVERY_REQUEST = True
# SESSION_EXPIRE_AT_BROWSER_CLOSE True NEED SESSION_SAVE_EVERY_REQUEST True
# SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_AGE = 60 * 60 * 16

# Application definition
import socket

#AUTHENTICATION_BACKENDS=['brick.CustomModelBackend.CustomModelBackend']



INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'xadmin',
    'crispy_forms',
    'reversion',
    'DjangoUeditor',
    'storeapp',
    'aliapp',
    'ebayapp',
    'skuapp',
    'gather_app',
    'pyapp',
    'djcelery',
    'app_djcelery',
    'chart_app',
    'picapp',
    'joom_app',
    'aliexpress_app',
    'mymall_app',
    'wishpubapp',
    'reportapp',
    'sqlapp',
    # 'lzd_app',
    'lazada_app',
    'walmart_app',
    'shopee_app',
    'shopee_app_V2',
    'funmart_app',
    'jumia_app',
    'dingtalk_app',
    'django_mysql',
    'phone_app',
    'alibaba_app',
    'factory_app',
    # 'alabomapp',
    'stock_app',
    'shopify_app',
    # 'ebaytmpapp',
    'amz_app',
    'category_app',
    'authApply_app',
    'vova_app',
    'allplatform_app',
    'zoodmall_app',
    'resapp',
    'cdis_app',
    'meesho_app',
    'joybuy_app',
    'PayPal_app',
    'cf_app',
    'email_app',
    'signals_app',
    'rakuten_app',
    'real_app',
    'b2w_app',
    'flow_app',
    'login_app',
    'xshoppy',
    'fyndiq_app',
    'thd_app',
    'browser_app',
    'platformorder_app',
    'risk_app',
    'todo_job_app',
    'vat_app',
    'meli_app',
    'sql_write_app',
    'ckeditor',
    'ckeditor_uploader',
    'zh_app',
    'global_cache_app',
    'product_app',
    'wayfair_app',
    'func_process_app',
    # 'import_export',
    'report_center_app',
    'shein_app',
    'factory_clothing_app',
]

CKEDITOR_UPLOAD_PATH = 'upload/'
CKEDITOR_IMAGE_BACKEND = 'pillow'
# 图片保存路径
X_FRAME_OPTIONS = 'SAMEORIGIN'

ALIYUN_BUCKET_ACL_TYPE = "public-read"  # private, public-read, public-read-write

# OSS配置
DEFAULT_FILE_STORAGE = 'skuapp.public.ckeditor_storage.AliyunStorageObject'

# ckeditor配置功能项和样式
CKEDITOR_CONFIGS = {
    # django-ckeditor默认使用default配置
    'default': {
        # 编辑器宽度自适应
        'width': 'auto',
        'height': '400px',

        'update': ['Image', 'Update', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak'],
        'skin': 'moono',
        'toolbar_Basic': [
            ['Source', '-', 'Bold', 'Italic']
        ],
        # 工具栏按钮
        'toolbar_YourCustomToolbarConfig': [
            {'name': 'document', 'items': []},
            {'name': 'clipboard', 'items': []},
            {'name': 'editing', 'items': []},
            {'name': 'forms',
             'items': []},
            '/',
            {'name': 'basicstyles',
             'items': ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat']},
            {'name': 'paragraph',
             'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-',
                       'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl',
                       'Language']},
            {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},
            {'name': 'insert',
             'items': ['Image', 'Flash', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe']},
            {'name': 'styles', 'items': ['Format', 'Font', 'FontSize']},
            {'name': 'colors', 'items': ['TextColor',]},
            {'name': 'tools', 'items': ['Maximize', 'ShowBlocks']},
            {'name': 'yourcustomtools', 'items': [
                # 自定义控件
                'Preview',
                'Maximize',
            ]},
        ],
        # 工具栏风格
        'toolbar': 'YourCustomToolbarConfig',  # put selected toolbar config here
        # tab键转换空格数
        'tabSpaces': 4,
        # 添加 Prism 相关插件
        'extraPlugins': ','.join(
            [
                # your extra plugins here
                'div',
                'autolink',
                'autoembed',
                'embedsemantic',
                'autogrow',
                # 'devtools',
                'widget',
                'lineutils',
                'clipboard',
                'dialog',
                'dialogui',
                'elementspath'
            ]),
    }
}

# REST风格
BASE_APPS=[
    'rest_framework',
    'hqapp'
]


####################################
# #####  Rest_FrameWork配置  #######
####################################

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        # 'rest_framework.permissions.IsAuthenticated',
        'rest_framework.permissions.AllowAny',
    ),

    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
    # 'DEFAULT_AUTHENTICATION_CLASSES': (
    #     'rest_framework.authentication.TokenAuthentication',
    # ),
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',
        'rest_framework.parsers.FileUploadParser',
    ),

    'NON_FIELD_ERRORS_KEY': 'error_msg'
}





INSTALLED_APPS=INSTALLED_APPS+BASE_APPS


DJANGO_MYSQL_REWRITE_QUERIES=True
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'pyinstrument.middleware.ProfilerMiddleware',
    'skuapp.get_username.RequestMiddleware',
    'django_session_timeout.middleware.SessionTimeoutMiddleware',
    # 'brick.utils.middleware.RequireLoginMiddleware',
    'brick.utils.middleware.RedirectLogMiddleware',  # 访问日志记录中间件
    'brick.utils.middleware.StripBlankRequest',
]


def custom_show_pyinstrument(request):
    return request.user.is_superuser

PYINSTRUMENT_SHOW_CALLBACK = "%s.custom_show_pyinstrument" % __name__


ROOT_URLCONF = 'Project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

TEMPLATE_DIRS = (os.path.join(BASE_DIR, 'skuapp/templates'),)
WSGI_APPLICATION = 'Project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

SILENCED_SYSTEM_CHECKS = [
    'django_mysql.W002',

]

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'hq_db',
        'HOST': 'pc-uf6934eqcipeb2ac5.rwlb.rds.aliyuncs.com',
        'PORT': '3306',
        'USER': 'hq_mysql_write',
        'PASSWORD': 'K120Esc1',
        # 'OPTIONS': {
        #     'init_command': "SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1",
        #     'charset': 'utf8mb4',
        # },
    },

    'syn': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'py_db',
        'HOST': 'pc-uf6934eqcipeb2ac5.rwlb.rds.aliyuncs.com',
        'PORT': '3306',
        'USER': 'hq_mysql_write',
        'PASSWORD': 'K120Esc1',
        # 'OPTIONS': {
        #     'init_command': "SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1",
        #     'charset': 'utf8mb4',
        # },
    },

    'pic': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'pic_db',
        'HOST': 'pc-uf6934eqcipeb2ac5.rwlb.rds.aliyuncs.com',
        'PORT': '3306',
        'USER': 'hq_mysql_write',
        'PASSWORD': 'K120Esc1',
        # 'OPTIONS': {
        #     'init_command': "SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1",
        #     'charset': 'utf8mb4',
        # },
    },

    'factory': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'factory_db',
        'HOST': 'pc-uf6934eqcipeb2ac5.rwlb.rds.aliyuncs.com',
        'PORT': '3306',
        'USER': 'hq_mysql_write',
        'PASSWORD': 'K120Esc1',
        # 'OPTIONS': {
        #     'init_command': "SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1",
        #     'charset': 'utf8mb4',
        # },
    },

    'ali': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'hq',
        'HOST': 'pc-uf6934eqcipeb2ac5.rwlb.rds.aliyuncs.com',
        'PORT': '3306',
        'USER': 'hq_mysql_write',
        'PASSWORD': 'K120Esc1',
        # 'OPTIONS': {
        #     'init_command': "SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1",
        #     'charset': 'utf8mb4',
        # },
    },

    'amz': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'amz_db',
        'HOST': 'pc-uf6934eqcipeb2ac5.rwlb.rds.aliyuncs.com',
        'PORT': '3306',
        'USER': 'hq_mysql_write',
        'PASSWORD': 'K120Esc1',
        # 'OPTIONS': {
        #     'init_command': "SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1",
        #     'charset': 'utf8mb4',
        # },

    },
    
    'report': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'report_db',
        'HOST': 'pc-uf6934eqcipeb2ac5.rwlb.rds.aliyuncs.com',
        'PORT': '3306',
        'USER': 'hq_mysql_write',
        'PASSWORD': 'K120Esc1',
        # 'OPTIONS': {
        #     'init_command': "SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1",
        #     'charset': 'utf8mb4',
        # },
    },

    'sql': {
        'ENGINE': 'sql_server.pyodbc',
        'NAME': 'ShopElf',
        'HOST': '172.19.67.219,18793',
        'USER': 'fancyqube',
        'PASSWORD': 'K120Esc1',
        'OPTIONS': {
            'AUTOCOMMIT': True,
            'host_is_server': True,
            'unicode_results': True,
            'driver': 'FreeTDS',
            # 'MARS_Connection': True,
        },
    },
    'sql_write': {
        'ENGINE': 'sql_server.pyodbc',
        'NAME': 'ShopElf',
        'HOST': '172.19.67.219,18793',
        'USER': 'sa',
        'PASSWORD': '$%^AcB2@9!@#',
        'OPTIONS': {
            'AUTOCOMMIT': True,
            'host_is_server': True,
            'unicode_results': True,
            'driver': 'FreeTDS',
            # 'MARS_Connection': True,
        },
    },

    # 'ebaytmp':{
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'hq',
    #     'HOST': 'rm-uf6pdk7k53y7s817u3o.mysql.rds.aliyuncs.com',
    #     'PORT': '3306',
    #     'USER': 'hequdb',
    #     'PASSWORD': 'K120Esc1',
    #     # 'OPTIONS': {
    #     #     'init_command': "SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1",
    #     #     'charset': 'utf8mb4',
    #     # },
    # },

    'res': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'res_db',
        'HOST': 'pc-uf6934eqcipeb2ac5.rwlb.rds.aliyuncs.com',
        'PORT': '3306',
        'USER': 'hq_mysql_write',
        'PASSWORD': 'K120Esc1',
        # 'OPTIONS': {
        #     'init_command': "SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1",
        #     'charset': 'utf8mb4',
        # },
    },

    'thd': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'thd_db',
        'HOST': 'pc-uf6934eqcipeb2ac5.rwlb.rds.aliyuncs.com',
        'PORT': '3306',
        'USER': 'hq_mysql_write',
        'PASSWORD': 'K120Esc1',
        # 'OPTIONS': {
        #     'init_command': "SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1",
        #     'charset': 'utf8mb4',
        # },
    },
    'hy': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'hq_sms',
        'HOST': 'pc-uf6934eqcipeb2ac5.rwlb.rds.aliyuncs.com',
        'PORT': '3306',
        'USER': 'hq_mysql_write',
        'PASSWORD': 'K120Esc1',
    },
    'original_data': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'original_data',
        'HOST': 'pc-uf6934eqcipeb2ac5.rwlb.rds.aliyuncs.com',
        'PORT': '3306',
        'USER': 'hq_mysql_write',
        'PASSWORD': 'K120Esc1',
    },
    'zh': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'zh_db',
        'HOST': 'pc-uf6934eqcipeb2ac5.rwlb.rds.aliyuncs.com',
        'PORT': '3306',
        'USER': 'hq_mysql_write',
        'PASSWORD': 'K120Esc1',
        # 'OPTIONS': {
        #     'init_command': "SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1",
        #     'charset': 'utf8mb4',
        # },
    },
}
DATABASE_APPS_MAPPING = {
    'pyapp': 'syn',
    'picapp': 'pic',
    'aliapp': 'ali',
    'reportapp':'report',
    'sqlapp':'sql',
    'factory_app':'factory',
    'factory_clothing_app': 'factory',
    # 'ebaytmpapp':'ebaytmp',
    'amz_app':'amz',
    'resapp': 'res',
    'thd_app': 'thd',
    'hqapp': 'hy',
    'platformorder_app': 'original_data',
    'sql_write_app': 'sql_write',
    'zh_app':'zh'
}
DATABASE_ROUTERS = ['Project.db_router.pyappRouter']
SQLSERVERDB = 'DRIVER={SQLServer};SERVER=172.19.67.219;port=18793;DATABASE=ShopElf;UID=sa;PWD=$%^AcB2@9!@#'

#db = MySQLdb.connect('pc-uf6934eqcipeb2ac5.rwlb.rds.aliyuncs.com','user_by','user_by','hq_db' )

EXAMPLE_DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

#LANGUAGES =(
    #见http://www.i18nguy.com/unicode/language-identifiers.html，但全部小写
    #('en-gb',_fake_gettext('UK English')),
    #('en-us',_fake_gettext('US English')),
#)
#LANGUAGES =(
    #('en-us',ugettext('English')),
    #('uk',ugettext('Ukrainian')),
#)
#LANGUAGE_CODE ='en-gb'
# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

#LANGUAGE_CODE = 'en-us'
#LANGUAGE_CODE = 'zh-Hans'

LANGUAGE_CODE = 'en'
lang_code = 'en'
#TIME_ZONE = 'UTC'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False




# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'


STATIC_ROOT = os.path.join(BASE_DIR,'static/')
#认证信息
ACCESS_KEY_ID= 'LTAI4Fp3Ay342a5e6bHQqH8s'
ACCESS_KEY_SECRET = 'pCs3iTnTa6cMgnEKmTL5Jv5p2FiH9f'
#认证信息-Amazon公共专属
ACCESS_KEY_ID_AMZ = 'FP60l5Rd7FBHDNAZ'
ACCESS_KEY_SECRET_AMZ = 'wjEIGuPnRjSURzUDYUmBXrFv3ijk8f'

PREFIX = 'https://'

ENDPOINT = 'vpc100-oss-cn-shanghai.aliyuncs.com'
ENDPOINT_OUT = 'oss-cn-shanghai.aliyuncs.com'
BEIJINGPOINT = 'oss-cn-beijing-internal.aliyuncs.com'
BEIJINGPOINT_OUT = 'oss-cn-beijing.aliyuncs.com'
ENDPOINT_SHEIN = 'oss-cn-hangzhou.aliyuncs.com'
#在没有SPU的情况下原始图片存放路径，后续产生了SPU这些要挪走
BUCKETNAME_SHEIN = 'fancyqube-shein-share'
BUCKETNAME_ALIPIC = 'fancyqube-alipic'
BUCKETNAME_HAVEMAINSKU = 'fancyqube-havemainsku'
BUCKETNAME_XLS = 'fancyqube-xls'
BUCKETNAME_EXPORT_XLS = 'fancyqube-export-xls'
BUCKETNAME_UPLOAD_XLS = 'fancyqube-upload-xls'
BUCKETNAME_ZIP = 'fancyqube-zip'
BUCKETNAME_ZIP_ARTED  = 'fancyqube-zip-arted'
BUCKETNAME_DOWNLOAD='fancyqube-download'
BUCKETNAME_AMAZON  = 'fancyqube-amazon'
BUCKETNAME_PIC = 'fancyqube-mainskupic'
BUCKETNAME_overseas_warehouse_cargo_infor_xls = 'fancyqube-overseas-warehouse-cargo-infor-xls'
BUCKETNAME_ALL_MAINSKU_PIC = 'fancyqube-all-mainsku-pic'
BUCKETNAME_PDF = 'fancyqube-pdf'
BUCKETNAME_CSV = 'fancyqube-kc-csv'
BUCKETNAME_PIC = 'fancyqube-pic'
#存放调研阶段没建SPU的图片
BUCKETNAME_NOMAINSKU = 'fancyqube-nomainsku'
#存放Amazon铺货SKU主图
BUCKETNAME_AMZ_DISTRIBUTE = 'fancyqube-amazon-published-pic'
#Amazon公有API图片存放
BUCKETNAME_AMZ_PUBLIC_STORE = 'amz-picstore-hqmgr'
#存放开放阶段所有的图片
BUCKETNAME_DEV = 'fancyqube-dev'

BUCKETNAME_FLOWER = 'flower_image'
#美工后的图片
BUCKETNAME_ARTED = 'fancyqube-arted'

#原始调研图片和供应商图片
BUCKETNAME_SV = 'fancyqube-sv'
BUCKETNAME_1688  = 'fancyqube-1688'
#测试
#BUCKETNAME_SV = 'fancyqube-sv-test'
#BUCKETNAME_1688  = 'fancyqube-1688-test'
#普源的图片存放地址
BUCKETNAME_PY  = 'fancyqube-py'
#侵权图片
BUCKETNAME_TORT = 'fancyqube-tort'

BUCKETNAME_FACTORY = 'fancyqube-factory'

# eBay Pic
BUCKETNAME_EBAYPIC = 'fancyqube-ebaypic'

# Windows可执行程序exe地址
BUCKETNAME_APIVERSION = 'fancyqube-apiversion'

# 海外仓FNSKU存放
BUCKETNAME_FNSKU_PIC = 'fancyqube-fnskuimg'


LIST_PLATFORM= ['amazon','ebay','express','lazada','wish']

LIST_DISPLAY_FIELD = ('id','SourcePicPath','Name','Category1','Category2','MainSKU','Keywords','SourceURL','PlatformName','Remark','StaffID','UpdateTime','show_oplog',)

#Amazon印度站算价配置
#汇率
EXCHANGE_RATE = 9.9
#利润率
PROFIT_RATE = 0.3
#gati运费(带电/不带电)
TRACK_PRICE_ELEC = 0.038
TRACK_PRICE_UNELEC = 0.048
#gati处理费规格(首重/单价)
TRACK_DEAL_WEIGHT = 500
TRACK_DEAL_PRICE = 7
#价格单配置
MARKETED = 'Fanku Eretail Pvt. Ltd.'
MANUFACTURED = 'Fanku Eretail Pvt. Ltd.'
MRP_START = 'RS.'
MRP_END = '/-(inclusive of all taxes)'
CUSTOMER_PHONE = '8512020156'
END_MESSAGE = 'Made by Fanku'



#申报比例
SBBL =6.5
#普源表单字段定义
XLS_FIELDS = (u'操作类型',u'商品编码',u'SKU',u'多款式',u'是否有样品',u'样品数量',u'大类名称', u'小类名称',u'商品名称',u'当前状态',
              u'材质',u'规格',u'型号',u'款式',u'品牌',u'单位',u'最小包装数',u'重量(G)',u'采购渠道',u'供应商名称',
              u'成本单价(元)',u'批发价格(美元)',u'零售价格(美元)',u'最低售价(美元)',u'最高售价(美元)',u'市场参考价(美元)',u'备注',u'中文申报名',u'英文申报名',u'申报价值(美元)',
              u'原产国代码',u'原产国',u'库存上限',u'库存下限',u'开发员',u'建资料员',u'包装规格',u'开发日期',u'SKU款式1',u'SKU款式2',
              u'SKU款式3', u'SKU描述',u'图片URL',u'采购员',u'发货仓库',u'采购到货天数',u'内包装成本',u'网页URL',u'网页URL2',u'网页URL3',
              u'最低采购价格',u'海关编码',u'库存预警销售周期',u'采购最小订货量',u'内盒长',u'内盒宽',u'内盒高',u'内盒毛重',u'内盒净重',u'外箱长',
              u'外箱宽',u'外箱高',u'外箱毛重',u'外箱净重',u'商品URL',u'包装事项',u'是否带电',u'商品SKU状态',u'工号权限',u'季节',
              u'是否粉末',u'是否液体',u'责任归属人1',u'责任归属人2',u'物流属性',u'包装难度系数',u'店铺名称',u'UPC码',u'ASN码',u'网页URL4',u'网页URL5',u'网页URL6',
              u'店铺运费',u'包装材料重量',u'汇率',u'物流公司价格',u'交易费',u'毛利率',u'计算售价',
              )
# 普源B_Goods表中英文对应
# ITEM_DICT = {
#     'GoodsName': u'商品名称', 'GoodsStatus': u'当前状态', 'Material': u'材质', 'Class': u'规格', 'Model': u'型号',
#     'Unit': u'单位', 'PackageCount': u'最小包装数', 'Weight': u'重量(G)',
#      'SupplierName': u'供应商名称', 'CostPrice': u'商品成本单价(元)',
#      'Notes': u'备注', 'AliasCnName': u'中文申报名', 'AliasEnName': u'英文申报名',
#     'SalerName2': u'建资料员',
#     'PackName': u'包装规格', 'BmpUrl': u'换图要求', 'Purchaser': u'采购员', 'StoreID': u'发货仓库',
#     'StockDays': u'采购到货天数', 'LinkUrl': u'供应商链接',
#     'MinPrice': u'最低采购价格',   'StockMinAmount': u'采购最小订货量',
#     'InLong': u'内盒长','InWide': u'内盒宽', 'InHigh': u'内盒高',
#     'OutLong': u'外箱长', 'OutWide': u'外箱宽', 'OutHigh': u'外箱高',
#     'ItemUrl': u'商品URL', 'possessMan1': u'责任归属人1', 'possessMan2': u'责任归属人2',
#     'TQBH': u'提前备货', 'BMLGYLSP': u'备面料供应链商品','DeclaredValue': '申报价值(美元)',
#     'WMLGYLSP': u'无面料供应链商品', 'GHBWSP': u'供货不稳商品', 'WarningCats': u'库存预警', 'Season': u'季节',
#     'PackFee': u'内包装成本', 'AttributeName': u'物流属性', 'Loss&Reduction': u'计损降价', 'FitCode': u'库位属性',
#     'Sell_law': '卖法', 'Product_packaging': '产品外包装', 'Product_size': '产品尺寸', 'Prepacking_Remarks': '预包装备注',
#     'embargo_mark':'禁运标记', 'OperCostPrice': 'SKU销售成本单价(元)'
# }
ITEM_DICT = {
    'GoodsName': u'商品名称', 'GoodsStatus': u'当前状态', 'Material': u'主材质', 'MaterialOne': u'次材质1',
    'MaterialTwo': u'次材质2', 'other_pic': u'发货验货图', 'Class': u'规格', 'Model': u'型号',
    'Unit': u'单位', 'PackageCount': u'最小包装数', 'Weight': u'重量(G)',
     'SupplierName': u'供应商名称', 'CostPrice': u'商品成本单价(元)',
     'Notes': u'备注', 'AliasCnName': u'中文申报名', 'AliasEnName': u'英文申报名',
    'SalerName2': u'建资料员',
    'PackName': u'包装规格', 'BmpUrl': u'换图要求', 'Purchaser': u'采购员', 'StoreID': u'发货仓库',
    'StockDays': u'采购到货天数', 'LinkUrl': u'供应商链接',
    'MinPrice': u'最低采购价格',   'StockMinAmount': u'采购最小订货量',
    'InLong': u'包装尺寸长','InWide': u'包装尺寸宽', 'InHigh': u'包装尺寸高',
    'OutLong': u'外箱长', 'OutWide': u'外箱宽', 'OutHigh': u'外箱高',
    'ItemUrl': u'商品URL', 'possessMan1': u'责任归属人1', 'possessMan2': u'责任归属人2',
    'TQBH': u'提前备货', 'BMLGYLSP': u'备面料供应链商品','DeclaredValue': '申报价值(美元)',
    'WMLGYLSP': u'无面料供应链商品', 'GHBWSP': u'供货不稳商品', 'WarningCats': u'库存预警', 'Season': u'季节',
    'PackFee': u'内包装成本', 'AttributeName': u'物流属性', 'Loss&Reduction': u'计损降价', 'FitCode': u'库位属性',
    'Sell_law': '卖法', 'Product_packaging': '产品外包装', 'Product_size': '产品尺寸', 'Prepacking_Remarks': '预包装备注',
    'embargo_mark':'禁运标记', 'OperCostPrice': 'SKU销售成本单价(元)', 'HolidayAttr': '节日属性',
    'NormalSalesDate_s': '销售开始日期', 'NormalSalesDate_e': '销售结束日期', 'SpecialSell': '商品信息备注（开发员）',
    'pack_acc_number': '预包装配件数', 'rid_inner_pack': '是否去内包装', 'is_european_standard': '是否欧/英代标签',
    'vacuum_pack': '是否抽真空', 'vacuum_claim': '抽真空要求', 'expansion': '拓展款', 'PackingRemarks': '包装要求',
    'QualityRemarks': '验货入库要求', 'is_infants': u'是否婴幼儿产品', 'shelflife': u'保质期',
    'shelflife_pic_url': u'保质期图片', 'IsStoreHelp': '是否需要仓库协助', 'InspectionDate': '生产日期选项',
    'US_site': '美国站点', 'UK_site': '英国站点', 'DE_site': '德国站点'
}

# 信息修改下拉框排序
# ITEM_ORDER_LIST = [
#     'GoodsName', 'GoodsStatus', 'Purchaser', 'SupplierName', 'LinkUrl', 'Notes', 'WarningCats', 'CostPrice', 'OperCostPrice', 'BmpUrl',
#      'SalerName2', 'possessMan1', 'possessMan2', 'Unit', 'Material', 'AttributeName', 'PackName',
#     'Class', 'Model', 'PackageCount', 'Weight', 'AliasCnName', 'AliasEnName', 'DeclaredValue',
#     'StoreID', 'StockDays',  'MinPrice','StockMinAmount', 'InLong', 'InWide', 'InHigh',  'OutLong',
#     'OutWide', 'OutHigh', 'ItemUrl', 'Season',
#     'FitCode', 'Sell_law', 'Product_packaging', 'Product_size', 'Prepacking_Remarks', 'embargo_mark'
# ]
# 信息修改下拉框排序
ITEM_ORDER_LIST = [
    'GoodsName', 'GoodsStatus', 'Purchaser', 'SupplierName', 'LinkUrl', 'Notes', 'CostPrice', 'OperCostPrice',
    'possessMan1', 'possessMan2', 'Unit', 'Material', 'MaterialOne', 'MaterialTwo', 'AttributeName', 'PackName',
    'Class', 'Model', 'PackageCount', 'Weight', 'AliasCnName', 'AliasEnName',
    'StockDays', 'StockMinAmount', 'InLong', 'InWide', 'InHigh',
    'FitCode', 'Sell_law', 'Product_packaging', 'Product_size', 'Prepacking_Remarks', 'embargo_mark',
    'US_site', 'UK_site', 'DE_site', 'HolidayAttr',
    'NormalSalesDate_s', 'NormalSalesDate_e', 'SpecialSell', 'pack_acc_number', 'rid_inner_pack',
    'is_european_standard', 'vacuum_pack', 'vacuum_claim',
    'expansion', 'PackingRemarks', 'QualityRemarks', 'is_infants', 'shelflife', 'shelflife_pic_url', 'IsStoreHelp',
    'InspectionDate', 'other_pic'
]

# 普源b_goods表字段类型及长度
ITEM_ATTRIBUTE = {
    'NID': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'GoodsCategoryID': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'CategoryCode': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 200},
    'GoodsCode': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 100},
    'GoodsName': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 200},
    'ShopTitle': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 200},
    'SKU': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 500},
    'BarCode': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 500},
    'FitCode': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 50},
    'MultiStyle': {'DATA_TYPE': 'smallint', 'CHARACTER_MAXIMUM_LENGTH': None},
    'Material': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 100},
    'Class': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 100},
    'Model': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 100},
    'Unit': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 20},
    'Style': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 100},
    'Brand': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 50},
    'LocationID': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'Quantity': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'SalePrice': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'CostPrice': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'AliasCnName': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 200},
    'AliasEnName': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 200},
    'Weight': {'DATA_TYPE': 'float', 'CHARACTER_MAXIMUM_LENGTH': None},
    'DeclaredValue': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'OriginCountry': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 100},
    'OriginCountryCode': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 4},
    'ExpressID': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'Used': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'BmpFileName': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 100},
    'BmpUrl': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 200},
    'MaxNum': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'MinNum': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'GoodsCount': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'SupplierID': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'Notes': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 2000},
    'SampleFlag': {'DATA_TYPE': 'smallint', 'CHARACTER_MAXIMUM_LENGTH': None},
    'SampleCount': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'SampleMemo': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 1000},
    'CreateDate': {'DATA_TYPE': 'date', 'CHARACTER_MAXIMUM_LENGTH': None},
    'GroupFlag': {'DATA_TYPE': 'smallint', 'CHARACTER_MAXIMUM_LENGTH': None},
    'SalerName': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 50},
    'SellCount': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'SellDays': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'PackFee': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'PackName': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 50},
    'GoodsStatus': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 100},
    'DevDate': {'DATA_TYPE': 'datetime', 'CHARACTER_MAXIMUM_LENGTH': None},
    'SalerName2': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 50},
    'BatchPrice': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'MaxSalePrice': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'RetailPrice': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'MarketPrice': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'PackageCount': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'ChangeStatusTime': {'DATA_TYPE': 'datetime', 'CHARACTER_MAXIMUM_LENGTH': None},
    'StockDays': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'StoreID': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'Purchaser': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 50},
    'LinkUrl': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 500},
    'LinkUrl2': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 500},
    'LinkUrl3': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 500},
    'StockMinAmount': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'MinPrice': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'HSCODE': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 50},
    'ViewUser': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 5000},
    'InLong': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'InWide': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'InHigh': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'InGrossweight': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'InNetweight': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'OutLong': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'OutWide': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'OutHigh': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'OutGrossweight': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'OutNetweight': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'ShopCarryCost': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'ExchangeRate': {'DATA_TYPE': 'numeric', 'CHARACTER_MAXIMUM_LENGTH': None},
    'WebCost': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'PackWeight': {'DATA_TYPE': 'numeric', 'CHARACTER_MAXIMUM_LENGTH': None},
    'LogisticsCost': {'DATA_TYPE': 'money', 'CHARACTER_MAXIMUM_LENGTH': None},
    'GrossRate': {'DATA_TYPE': 'numeric', 'CHARACTER_MAXIMUM_LENGTH': None},
    'CalSalePrice': {'DATA_TYPE': 'numeric', 'CHARACTER_MAXIMUM_LENGTH': None},
    'CalYunFei': {'DATA_TYPE': 'numeric', 'CHARACTER_MAXIMUM_LENGTH': None},
    'CalSaleAllPrice': {'DATA_TYPE': 'numeric', 'CHARACTER_MAXIMUM_LENGTH': None},
    'PackMsg': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 2000},
    'ItemUrl': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 500},
    'IsCharged': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'DelInFile': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'Season': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 100},
    'IsPowder': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'IsLiquid': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'possessMan1': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 64},
    'possessMan2': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 64},
    'LinkUrl4': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 500},
    'LinkUrl5': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 500},
    'LinkUrl6': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 500},
    'isMagnetism': {'DATA_TYPE': 'int', 'CHARACTER_MAXIMUM_LENGTH': None},
    'NoSalesDate': {'DATA_TYPE': 'datetime', 'CHARACTER_MAXIMUM_LENGTH': None},
    'NotUsedReason': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 64},
    'PackingRatio': {'DATA_TYPE': 'numeric', 'CHARACTER_MAXIMUM_LENGTH': None},
    'shippingType': {'DATA_TYPE': 'varchar', 'CHARACTER_MAXIMUM_LENGTH': 20},
    'FreightRate': {'DATA_TYPE': 'numeric', 'CHARACTER_MAXIMUM_LENGTH': None},
    'USEDueDate': {'DATA_TYPE': 'datetime', 'CHARACTER_MAXIMUM_LENGTH': None}
}

ITEM_TYPE_SET = ['int', 'date', 'datetime', 'numeric', 'varchar', 'float', 'money', 'smallint']

# PackName', 'PackFee',

# 库存预警对应关系
WARNING_DICT = {
    'wrNone': u'未指派',
    'wrPurOnRode': u'采购途中',
    'wrStopPur': u'永不采购',
    'wrSleepPur': u'暂不采购',
    'wradvanceStock': u'提前备货',
    'wrhaveFabricsupply': u'备面料供应链商品',
    'wrnoneFabricsupply': u'无面料供应链商品',
    'wrInstabilitySupply': u'供货不稳商品',
    'wrnoshortnopure': u'不缺货不采购/延迟转正',
    # 'wrwaitsupplychain': u'浦江印花',
    'empty': u'置回普通商品',
    'factorythree': u'OS901-测款',
    'factoryfive': u'OS902-备货款A',
    'factoryseven': u'OS903-备货款B',
    'factoryfifteen': u'OS904-备货款C',
    'factoryfive01': u'OS906-亚马逊补单',
    'factoryfive03': u'OS907-IP侵权产品',
    'factoryfive02': u'OS909-不允许缺货产品',
    'factoryfive05': u'OS910-半成品',
    'factoryfive06': u'OS913-万圣节款',
    'factoryfive07': u'OS914-圣诞节款',
    'factoryfive08': u'OS915-SHEIN',
    'factoryfive09': u'OS916-需清仓',
    'factoryfive10': u' OS917-成衣印',
    'wrIP': u'IP商品',
    'wrFollow': u'跟卖款商品',
    'wrAgency': u'代购款商品',
    'wrPromote': u'活动款商品',
    'wrNoStockout': u'高价值不缺货商品',
    'wrTempSoldoutByStock': u'临下有货',
    'OS600': u'OS600-自制印花',
    'OS601': u'OS601-测试商品/不缺货不采购',
    'OS602': u'OS602-出单补货/不缺货不采购',
    'OS603': u'OS603-服装IP商品,侵权商品',
    'OS608': u'OS608-服装网采印花口罩款',
    'OS609': u'OS609-服装下单做货/供货不稳商品',
    'OS616': u'OS616-半成品'
}

WARNING = {}
for warning_en, warning_cn in WARNING_DICT.items():
    WARNING[warning_cn] = warning_en


# 发货仓库对应关系
STORE_DICT = {
    '19': '浦江仓库', '38': '海外仓仓库', '49': '亚马逊仓库', '57': 'FBW仓-CN（上海仓）', '63': '易可达美西仓',
    '65': '无忧达美西仓', '66': '万邑通UK仓', '67': 'Shoppo巴西仓', '68': '无忧达美东仓', '69': '万邑通澳洲仓库',
    '71': '万邑通美国仓', '72': '易可达美东仓', '73': '集货仓', '74': '易可达英国仓', '75': '易可达德国仓',
    '76': '易可达澳洲仓', '77': 'LAZADA海外仓', '78': 'Jumia尼日利亚仓', '79': 'Souq沙特阿拉伯仓', '80': 'FBW美国仓',
    '81': 'FBW欧洲仓', '82': '广州诚信通发货仓库', '83': 'Kevin美国仓', '85': 'FBC-FR', '86': '浦江中转仓',
    '87': '易可达法国仓', '88': '大件分销仓', '89': '半成品库', '90': '魔方云仓', '91': 'shopee印尼仓', '92': 'FBS仓库',
    '94': 'Vova前置仓', '97': '包装耗材仓库', '114': '冠通分销仓'
}


# STORE_DICT = {
#     '19': u'浦江仓库', '38': u'海外仓仓库', '49': u'亚马逊仓库', '57': u'FBW仓-CN（上海仓）', '63': u'易可达美西仓',
#     '65': u'无忧达美西仓', '66': u'万邑通英国仓', '67': u'万邑通德国仓库', '68': u'无忧达美东仓', '69': u'万邑通澳洲仓库',
#     '71': u'万邑通美国仓',  '72': u'易可达美东仓', '73': u'浦江集货仓', '74': u'易可达英国仓', '75': u'易可达德国仓',
#     '76': u'易可达澳洲仓', '77': u'FBW仓-CN（杭州仓）', '78': u'Jumia尼日利亚仓', '79': u'Souq沙特阿拉伯仓',
#     '80': u'FBW美国仓', '81': u'FBW欧洲仓', '82': u'广州诚信通发货仓库', '83': u'Kevin美国仓', '85': u'FBC-FR',
#     '86': u'My mall深圳仓', '87': u'易可达法国仓', '88': u'Jumia科特迪瓦仓', '89': u'半成品库', '90': u'魔方云仓'
# }


SMALLCLASS = {'无小类': 'WXL', '时尚女装GWF': 'GWF', '时尚女装LG': 'LG', '时尚女装': 'W', '时尚男装': 'M', '时尚男装MF': 'MF', '休闲鞋': 'CSH', '时尚鞋': 'FSH', '鞋子其他': 'SH', '运动鞋': 'SSH',
     '包包其他': 'BG', '卡包/零钱包': 'CB', '书包': 'SB', '身体饰品': 'BDY', '手链': 'BL', '胸针': 'BRH', '耳环': 'EAR', '头饰': 'HDR', '饰品配件': 'JA', '饰品套装': 'JR',
     '钥匙扣': 'KEY', '项链': 'NL', '吊坠': 'PD', '戒指': 'RG', '手表': 'WH', '皮带': 'BET', '领带领结': 'BT', '时尚配件': 'FAC', '手套': 'GLV', '眼镜': 'GS', '帽子': 'HT',
     '围巾': 'SC', '袜子': 'SK', '相机': 'CA', '消费电子': 'CEA', '电脑': 'CM', '电子烟及配件': 'ECI', '智能设备': 'IED', '手机': 'PA', '浴室用品': 'BA ', '卧室用品': 'BED',
     '袖扣/纽扣': 'CFL', '收藏类': 'COA', '扇子': 'FAN', '家居其他': 'HG', '厨房用品': 'KN', '灯饰（除车灯）': 'LED', '宠物用品': 'PET', '海报': 'PT', '抱枕/抱枕套': 'PW',
     '墙贴二代/三代（印刷类）': 'PWS', '卧室用品QT': 'QT', '桌布': 'TC', '茶': 'TEA', '墙贴一代（雕刻类）': 'WS', '自行车': 'CYC', '渔具': 'FH', '防护用品': 'PE', '运动器械': 'SE',
     '运动其他': 'SPT', '工具': 'TL', '假发': 'HA', '健康美容其他': 'HB', '美发': 'HC', '按摩': 'HHC', '化妆刷': 'MB', '美脸（眼妆，唇妆等）': 'MU', '美甲': 'NA', '情趣用品': 'SX',
     '纹身': 'TT', '汽车用品其他': 'CAR', '车灯': 'CLG', '车贴': 'CWS', '益智玩具（魔方，拼图等）': 'BRT', '减压玩具（指尖陀螺，慢回弹等）': 'DT', '手办': 'HED', '毛绒玩具': 'ST', '玩具其他': 'TOY',
     '商业与工业': 'BI', '办公文教': 'OSS', '儿童用品': 'BB', '婴儿服': 'BC', '尿裤': 'DP', '儿童服': 'KC', '乐器': 'MI', '万圣节': 'HAW', '节日舞会派对其他': 'PY', '婚礼用品': 'WDS',
     '圣诞节': 'XMA', '纽扣电池': 'BU', '干电池': 'DB', '锂电池': 'IB', '移动电源': 'PB', '泳装': 'SW', '--': '--', '儿童服装': 'K', '文胸': 'BRA', '塑身衣': 'CS', '内裤': 'UDW',
     '情趣内衣': 'WF', '个人定制': 'PP', '印花产品其他':'PR'}

#服装排单采购等级码配置工厂生产天数 OS901 7,OS902 6,OS903 8,OS904 15,OS905 8,OS906 10,OS907 8,OS909 6
OSCODE_DICT = {
    'OS901':8,'OS902':8,'OS903':8,'OS904':13,'OS905':8,'OS906':9,'OS907':8,'OS908':9,'OS909':10,'OS910':5,'OS913':9,'OS914':9,'OS915':7,'OS916':0,'OS917':5
}


# FBA箱子规格(单位厘米)
FBA_BOX_SPEC = {
    'A': {'IsCustomize': False, 'Length': 62, 'Width': 47, 'Height': 47, 'IsFree': False},
    'B': {'IsCustomize': False, 'Length': 52, 'Width': 47, 'Height': 47, 'IsFree': False},
    'C': {'IsCustomize': False, 'Length': 45, 'Width': 37, 'Height': 37, 'IsFree': False},
    'D': {'IsCustomize': True, 'IsFree': True},
    'E': {'IsCustomize': True, 'IsFree': False}
}

FBA_LOGISTIC_WAY = {
    u'头程物流': 7000,
    u'快递物流': 5000
}


FBA_SITE_MAX_WEIGHT = {
    'UK': 22.4, 'DE': 22.4, 'FR': 22.4, 'ES': 22.4, 'IT': 22.4,
    'US': 22.4, 'IN': 22.4, 'AU': 22.4, 'JP': 22.4, 'CA': 22.4, 'MX': 22.4, 'AE': 22.4, 'NL': 22.4
}


AMAZON_SITE = {
    'US': {'CN_NAME': '美国', 'FBA_LOCATION': 'FBA-US', 'SITE_URL': 'https://www.amazon.com/dp/', 'CONFIRM_COLUMN': 'us_seller'},
    'AU': {'CN_NAME': '澳洲', 'FBA_LOCATION': 'FBA-AU', 'SITE_URL': 'https://www.amazon.com.au/dp/', 'CONFIRM_COLUMN': ''},
    'IN': {'CN_NAME': '印度', 'FBA_LOCATION': 'FBA-IN', 'SITE_URL': 'https://www.amazon.in/dp/', 'CONFIRM_COLUMN': ''},
    'DE': {'CN_NAME': '德国', 'FBA_LOCATION': 'FBA-DE', 'SITE_URL': 'https://www.amazon.de/dp/', 'CONFIRM_COLUMN': 'de_seller'},
    'FR': {'CN_NAME': '法国', 'FBA_LOCATION': 'FBA-FR', 'SITE_URL': 'https://www.amazon.fr/dp/', 'CONFIRM_COLUMN': 'fr_seller'},
    'JP': {'CN_NAME': '日本', 'FBA_LOCATION': 'FBA-JP', 'SITE_URL': 'https://www.amazon.co.jp/dp/', 'CONFIRM_COLUMN': 'jp_seller'},
    'SA': {'CN_NAME': '沙特', 'FBA_LOCATION': 'FBA-SA', 'SITE_URL': 'https://www.amazon.sa/dp/', 'CONFIRM_COLUMN': ''},
    'UK': {'CN_NAME': '英国', 'FBA_LOCATION': 'FBA-UK', 'SITE_URL': 'https://www.amazon.co.uk/dp/', 'CONFIRM_COLUMN': 'uk_seller'},
    'NL': {'CN_NAME': '荷兰', 'FBA_LOCATION': 'FBA-NL', 'SITE_URL': 'https://www.amazon.nl/dp/', 'CONFIRM_COLUMN': ''},
    'CA': {'CN_NAME': '加拿大', 'FBA_LOCATION': 'FBA-CA', 'SITE_URL': 'https://www.amazon.ca/dp/', 'CONFIRM_COLUMN': 'ca_seller'},
    'MX': {'CN_NAME': '墨西哥', 'FBA_LOCATION': 'FBA-MX', 'SITE_URL': 'https://www.amazon.com.mx/dp/', 'CONFIRM_COLUMN': ''},
    'ES': {'CN_NAME': '西班牙', 'FBA_LOCATION': 'FBA-ES', 'SITE_URL': 'https://www.amazon.es/dp/', 'CONFIRM_COLUMN': 'es_seller'},
    'IT': {'CN_NAME': '意大利', 'FBA_LOCATION': 'FBA-IT', 'SITE_URL': 'https://www.amazon.it/dp/', 'CONFIRM_COLUMN': ''},
    'AE': {'CN_NAME': '阿联酋', 'FBA_LOCATION': 'FBA-AE', 'SITE_URL': 'https://www.amazon.ae/dp/', 'CONFIRM_COLUMN': ''},
    'PL': {'CN_NAME': '波兰', 'FBA_LOCATION': 'FBA-PL', 'SITE_URL': 'https://www.amazon.pl/dp/', 'CONFIRM_COLUMN': ''}
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
       'standard': {
            'format': '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]- %(message)s'},
            'direct': {
                'format': '%(asctime)s - %(message)s'
            },
            'json': {
                'format': '%(message)s'
            },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',}
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True,
        },
        'default': {
            'level':'DEBUG',
            # 'level':'INFO',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': 'sourceDns/log/all.log',     #日志输出文件
            'maxBytes': 1024*1024*5,                  #文件大小
            'backupCount': 5,                         #备份份数
            'formatter':'standard',                   #使用哪种formatters日志格式
        },
        'error': {
            'level':'ERROR',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': 'sourceDns/log/error.log',
            'maxBytes':1024*1024*5,
            'backupCount': 5,
            'formatter':'standard',
        },
        'console':{
            #'level': 'DEBUG',
            'level':'INFO',
            'filters': ['require_debug_true'],  # 只有在Django debug为True时才在屏幕打印日志
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        },
        'request_handler': {
            #'level':'DEBUG',
            'level':'INFO',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': 'sourceDns/log/script.log',
            'maxBytes': 1024*1024*5,
            'backupCount': 5,
            'formatter':'standard',
        },
        'scprits_handler': {
            #'level':'DEBUG',
            'level':'INFO',
            'class':'logging.handlers.RotatingFileHandler',
            'filename':'sourceDns/log/script.log',
            'maxBytes': 1024*1024*5,
            'backupCount': 5,
            'formatter':'standard',
        },
        'celery.worker': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/var/log/celery.worker.log',
            'formatter': 'direct'
        },
        'celery.task': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/var/log/celery.task.log',
            'formatter': 'direct'
        },
        'global_cache_handler': {
            # 'level':'DEBUG',
            'level':'INFO',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': 'sourceDns/log/global_cache_info.log',
            'maxBytes': 1024*1024*5,
            'backupCount': 5,
            'formatter':'standard',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['default', 'console'],
            'level': 'DEBUG',
            'propagate': False
        },
        'django.request': {
            'handlers': ['request_handler'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'scripts': {
            'handlers': ['scprits_handler'],
            'level': 'INFO',
            'propagate': False
        },
        'sourceDns.webdns.views': {
            'handlers': ['default', 'error'],
            'level': 'DEBUG',
            'propagate': False
        },
        'sourceDns.webdns.util':{
            'handlers': ['error'],
            'level': 'ERROR',
            'propagate': False
        },
        'celery.worker': {
            'handlers': ['celery.worker'],
            'level': 'DEBUG'
        },
        'celery.task': {
            'handlers': ['celery.task'],
            'level': 'DEBUG'
        },
        'django.global_cache': {
            'handlers': ['global_cache_handler'],
            'level': 'DEBUG',
            'propagate': False,
        },
    }
}


import redis

redis_type_dict = {"read": "127.0.0.1", "write": "139.196.126.30"}
refresh_type_db_dict = {"SKU": 0, "Asin": 1, "FnSKU": 2, "PublicParam": 3, "ShopSKU": 4, "func_local_cache": 5, "global_local_cache": 6, "Itemid": 7, "ShopName": 8}
redis_pool_dict = {k: {i: redis.ConnectionPool(host=j, port=6379, password='online_redis', db=v, decode_responses=True) for i, j in redis_type_dict.items() if i} for k, v in refresh_type_db_dict.items() if k}
redis_connection_dict = {k: {i: redis.StrictRedis(connection_pool=redis_pool_dict.get(k).get(i), decode_responses=True) for i, j in redis_type_dict.items() if i} for k, v in refresh_type_db_dict.items() if k}


# redis配置
CACHES = {
    # 页面缓存redis数据库2
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://:K120Esc1@r-uf6206e9df36e854.redis.rds.aliyuncs.com:6379/2",
        'TIMEOUT': 1800,
    },

    # 商品信息缓存数据库0
    "product": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://:K120Esc1@r-uf6206e9df36e854.redis.rds.aliyuncs.com:6379/0",
    },

    # 普源增量缓存数据库0
    "py_add": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://:K120Esc1@r-uf6206e9df36e854.redis.rds.aliyuncs.com:6379/5",
    },
    
        # 普源增量缓存数据库0
    "py_add1": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://:K120Esc1@r-uf688e4200cb5104.redis.rds.aliyuncs.com:6379",
        'TIMEOUT': 1800,
    }, 
    "aliexpress_online_info": {
            "BACKEND": "django_redis.cache.RedisCache",
            "LOCATION": "redis://:K120Esc1@r-uf6206e9df36e854.redis.rds.aliyuncs.com:6379/10",    #速卖通api redis
            'TIMEOUT': 1800,
            "OPTIONS": {
                "IGNORE_EXCEPTIONS": True,
                "decode_responses":True
            }
    }, 
    
    # 存放异步调用进度
    "schedule": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://:K120Esc1@r-uf6206e9df36e854.redis.rds.aliyuncs.com:6379/6",
    },

    # 存放存在OSS图片的SKU字符串
    "has_oss_image_sku": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://:K120Esc1@r-uf6206e9df36e854.redis.rds.aliyuncs.com:6379/7",
    },
    
    # ebay 筛选数量缓存数据库10
    "ebay_online_info": {
            "BACKEND": "django_redis.cache.RedisCache",
            "LOCATION": "redis://:K120Esc1@r-uf6206e9df36e854.redis.rds.aliyuncs.com:6379/10",
            'TIMEOUT': 1800,
            "OPTIONS": {
                "IGNORE_EXCEPTIONS": True,
                "decode_responses":True
            }
    },
    
    # 存放订单对应业绩归属人信息
    "logistic_possessman2": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://:K120Esc1@r-uf6206e9df36e854.redis.rds.aliyuncs.com:6379/3",
    },

    # 侵权信息测试Redis
    "tort_words": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://:K120Esc1@r-uf6206e9df36e854.redis.rds.aliyuncs.com:6379/12",
    },

    # 亚马逊FBA发货Redis
    "amz_fba_shipment": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://:K120Esc1@r-uf6206e9df36e854.redis.rds.aliyuncs.com:6379/15",
    },

    # 全局本地缓存
    "global_local_cache": {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake1',
        'TIMEOUT': None,
        'OPTIONS': {
            'MAX_ENTRIES': 99999999,
            'CULL_FREQUENCY': 3,
        }
    },
}



# BmpUrl = 'http://172.19.67.220:880/images/'
BmpUrl = 'https://fancyqube-kc-csv.oss-cn-shanghai.aliyuncs.com/images/'
sample_BmpUrl = 'https://fancyqube-kc-csv.oss-cn-shanghai.aliyuncs.com/sample_images/'

# redis数据库用途
# redis 0  商品信息正式环境
# redis 1  任务队列正式环境
# redis 2  页面缓存正式环境
# redis 5  普源增量正式环境

# redis 3  商品信息.8测试环境
# redis 4  任务队列.8测试环境


# redis连接方式
# from django_redis import get_redis_connection
# redis_client = get_redis_connection(alias='py_add')

SHOPEE_IMPORT_EXCEL = [
    'ps_category_list_id', 'ps_product_name', 'ps_product_description', 'ps_price', 'ps_stock',
    'ps_product_weight', 'ps_days_to_ship', 'ps_sku_ref_no_parent', 'ps_mass_upload_variation_help',
    'ps_variation 1 ps_variation_sku', 'ps_variation 1 ps_variation_name', 'ps_variation 1 ps_variation_price','ps_variation 1 ps_variation_stock',
    'ps_variation 2 ps_variation_sku', 'ps_variation 2 ps_variation_name', 'ps_variation 2 ps_variation_price','ps_variation 2 ps_variation_stock',
    'ps_variation 3 ps_variation_sku', 'ps_variation 3 ps_variation_name', 'ps_variation 3 ps_variation_price','ps_variation 3 ps_variation_stock',
    'ps_variation 4 ps_variation_sku', 'ps_variation 4 ps_variation_name', 'ps_variation 4 ps_variation_price','ps_variation 4 ps_variation_stock',
    'ps_variation 5 ps_variation_sku', 'ps_variation 5 ps_variation_name', 'ps_variation 5 ps_variation_price','ps_variation 5 ps_variation_stock',
    'ps_variation 6 ps_variation_sku', 'ps_variation 6 ps_variation_name', 'ps_variation 6 ps_variation_price','ps_variation 6 ps_variation_stock',
    'ps_variation 7 ps_variation_sku', 'ps_variation 7 ps_variation_name', 'ps_variation 7 ps_variation_price','ps_variation 7 ps_variation_stock',
    'ps_variation 8 ps_variation_sku', 'ps_variation 8 ps_variation_name', 'ps_variation 8 ps_variation_price','ps_variation 8 ps_variation_stock',
    'ps_variation 9 ps_variation_sku', 'ps_variation 9 ps_variation_name', 'ps_variation 9 ps_variation_price','ps_variation 9 ps_variation_stock',
    'ps_variation 10 ps_variation_sku', 'ps_variation 10 ps_variation_name', 'ps_variation 10 ps_variation_price','ps_variation 10 ps_variation_stock',
    'ps_variation 11 ps_variation_sku', 'ps_variation 11 ps_variation_name', 'ps_variation 11 ps_variation_price','ps_variation 11 ps_variation_stock',
    'ps_variation 12 ps_variation_sku', 'ps_variation 12 ps_variation_name', 'ps_variation 12 ps_variation_price','ps_variation 12 ps_variation_stock',
    'ps_variation 13 ps_variation_sku', 'ps_variation 13 ps_variation_name', 'ps_variation 13 ps_variation_price','ps_variation 13 ps_variation_stock',
    'ps_variation 14 ps_variation_sku', 'ps_variation 14 ps_variation_name', 'ps_variation 14 ps_variation_price','ps_variation 14 ps_variation_stock',
    'ps_variation 15 ps_variation_sku', 'ps_variation 15 ps_variation_name', 'ps_variation 15 ps_variation_price','ps_variation 15 ps_variation_stock',
    'ps_variation 16 ps_variation_sku', 'ps_variation 16 ps_variation_name', 'ps_variation 16 ps_variation_price','ps_variation 16 ps_variation_stock',
    'ps_variation 17 ps_variation_sku', 'ps_variation 17 ps_variation_name', 'ps_variation 17 ps_variation_price','ps_variation 17 ps_variation_stock',
    'ps_variation 18 ps_variation_sku', 'ps_variation 18 ps_variation_name', 'ps_variation 18 ps_variation_price','ps_variation 18 ps_variation_stock',
    'ps_variation 19 ps_variation_sku', 'ps_variation 19 ps_variation_name', 'ps_variation 19 ps_variation_price','ps_variation 19 ps_variation_stock',
    'ps_variation 20 ps_variation_sku', 'ps_variation 20 ps_variation_name', 'ps_variation 20 ps_variation_price','ps_variation 20 ps_variation_stock',
    'ps_img_1', 'ps_img_2', 'ps_img_3', 'ps_img_4', 'ps_img_5', 'ps_img_6', 'ps_img_7', 'ps_img_8', 'ps_img_9'
]

# 普源数据库连接配置
'''
from Project.settings import SQLSERVERDBCONN
db_conn_py = pymssql.connect(host=SQLSERVERDBCONN['MainDB']['host'], user=SQLSERVERDBCONN['MainDB']['username'],
                                              password=SQLSERVERDBCONN['MainDB']['password'],
                                              database=SQLSERVERDBCONN['MainDB']['database'],
                                              port=SQLSERVERDBCONN['MainDB']['port'],charset='utf8')
cursor = db_conn_py.cursor()
'''
SQLSERVERDBCONN = {
    # 主库链接配置——读写
    'MainDB': {
        'host': '172.19.67.219',
        'port': '18793',
        'username': 'sa',
        'password': r'$%^AcB2@9!@#',
        'database': 'ShopElf',
    },
    # 主库链接配置——读
    'MainDB_r': {
        'host': '172.19.67.219',
        'port': '18793',
        'username': 'fancyqube',
        'password': r'K120Esc1',
        'database': 'ShopElf',
    },
    # 备库链接配置_读写
    'BackDB': {
        'host': '172.19.67.219',
        'port': '18793',
        'username': 'sa',
        'password': r'$%^AcB2@9!@#',
        'database': 'ShopElf',
    },
    # 备库链接配置_读
    'BackDB_r': {
        'host': '172.19.67.219',
        'port': '18793',
        'username': 'fancyqube',
        'password': r'K120Esc1',
        'database': 'ShopElf',
    },
    # API链接
    'py_api': {
        'api': 'http://172.19.67.219:8080/WarehouseAPI/'
    },
    'py_bk_api': {
        'api': 'http://172.19.67.219:8080/WarehouseAPI/'
    }
}


MYSQLDBCONN = {
    'HQDB': {
        'host': 'pc-uf6934eqcipeb2ac5.rwlb.rds.aliyuncs.com',
        'port': 3306,
        'username': 'hq_mysql_write',
        'password': r'K120Esc1',
        'database': 'hq_db',
    },
    'REPDB': {
        'host': 'pc-uf6934eqcipeb2ac5.rwlb.rds.aliyuncs.com',
        'port': 3306,
        'username': 'hq_mysql_write',
        'password': r'K120Esc1',
        'database': 'report_db',
    },
    'EBAYTMP': {
        'host': 'rm-uf6pdk7k53y7s817u3o.mysql.rds.aliyuncs.com',
        'port': 3306,
        'username': 'hequdb',
        'password': r'K120Esc1',
        'database': 'hq',
    },
}

####################################
# ######  物流接口配置  #########
####################################

LOGISTICS={
    "JinChen":{
        "appKey":"7b922d3c25e8b5e19b8a824664abba09",
        "appToken":"07bec103b78825dc84f631c5c5e5689607bec103b78825dc84f631c5c5e56896",
        "url":"http://gjhydl.rtb56.com/webservice/PublicService.asmx/ServiceInterfaceUTF8"
    },
    "JinLian":{
        "appKey":"f9dc5820264b0640a397257ab4475c56f9dc5820264b0640a397257ab4475c56",
        "appToken":"fa712dd74e4729020ecaba2e0ca741da",
        "url":"http://ywjl.rtb56.com/webservice/PublicService.asmx/ServiceInterfaceUTF8"
    },
    "JiSu":{
        "appKey":"b83f3fca409690e5d1e01bcf9bf53516b83f3fca409690e5d1e01bcf9bf53516",
        "appToken":"9a6c76d55861d3b3366c4ea8c3eb0e8b",
        "url":"http://gjhydl.rtb56.com/webservice/PublicService.asmx/ServiceInterfaceUTF8"
    },
    "BoXin": {
        "appKey": "e534cc521489b9b0686c37df5c312318e534cc521489b9b0686c37df5c312318",
        "appToken": "18f23c564ea26efd540c3c07a0d63dfd",
        "url": "http://ywbx.rtb56.com/webservice/PublicService.asmx/ServiceInterfaceUTF8"
    },
    "LePai":{
        "appKey":"c3950b3cc3b2d9d11e98055a0f68298ec3950b3cc3b2d9d11e98055a0f68298e",
        "appToken":"c0a4f811a96ef620d251e69941bd0bb7",
        "url":"http://ywlp.rtb56.com/webservice/PublicService.asmx/ServiceInterfaceUTF8"
    },
}



XADMIN_CUSTOM_COLUMN_SHORT_DESC = '<div class="dropdown pull-left"><a class="dropdown-toggle" data-toggle="dropdown" href="#">%s</a></div>'
# 添加注释
XADMIN_CUSTOM_COLUMN_SHORT_DESC_DESCRIPTION = '''
    <div class="dropdown pull-left">
        <a class="dropdown-toggle" data-toggle="dropdown" href="#">%s</a>
        <span class="glyphicon glyphicon-question-sign" aria-hidden="true" data-toggle="tooltip" data-placement="bottom" data-html="true" title="" data-original-title="<span class=&quot;tooltip_text_class&quot;>说明:%s</span>"</span>
    </div>
'''

UEDITOR_SETTINGS = {
            "toolbars": {  # 定义多个工具栏显示的按钮，允行定义多个
            "name1": [['source', '|', 'bold', 'italic', 'underline']],
            "name2": []
            },
            "images_upload":{
            "allow_type": "jpg,png",  # 定义允许的上传的图片类型
            "max_size": "2222kb"  # 定义允许上传的图片大小，0代表不限制
            },
            "files_upload": {
            "allow_type": "zip,rar",  # 定义允许的上传的文件类型
            "max_size": "2222kb"  # 定义允许上传的文件大小，0代表不限制
},
"image_manager": {
    "location": ""  # 图片管理器的位置,如果没有指定，默认跟图片路径上传一样
},
}
