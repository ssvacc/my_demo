==================================================baseElement==================================================
# baseElement文件夹是基础组件模板，例如一个按钮，一个分页组件，他们的有自己的配套data,methods,style,可以放到模板中直接使用（调用组合的接口函数生成组合模板）
引用基础组件模板暂时不兼容一个页面使用重复的基础组件
# 目的是将通用的基础组件保持风格统一，不用定义重复的组件
# 基础组件模板的template区 使用<hqTemplate>标签
# 基础组件模板的data区 使用<hqData>标签
# 基础组件模板的methods区 使用<hqMethods>标签
# 基础组件模板的style区 使用<hqStyle>标签
# 基础组件模板的生命周期区 使用<hqLifeCycle>标签

==================================================groupElement==================================================
# groupElement文件夹是一套组合元素，包含了多个baseElement之间的组合嵌套
# 目的：对于嵌套相关的组件，例如菜单，tabs，父组件引用子组件等
# 可以使用父组件嵌套子组件的方式，这样可能生成多个vue文件

==================================================customElement==================================================
# customElement文件夹是定制的一套组合元素，包含了复杂结构的组件
# 目的：稍微复杂的结构，可定制自己的模板用来生成复杂的页面
# 复杂页面自己编码实现之后，将其转为自定义模板，以后再有需求，新的自定义模板可以复用

==================================================middleElement(可能不需要)==================================================
# middleElement文件夹是中间模板，用于在复合组件、子父组件这种容器组件之间的嵌套
# 基础容器组件定义了容器的样式，需要根据容器格式写配置，根据配置的数据结构配要嵌套组件的名称
# 配置的数据结构需给每个组件增加key,每个key都是不同的，以便容器组件找到应该渲染哪个子组件
# 先获取基础组件，并将渲染好的template区内容渲染到中间文件中生成一个middleElement中间模板
# 再将中间模板作为组件放到主渲染的函数中（中间模板只作为template区的中一个组件），生成最终的vue文件
# 容器组件有template区和style区，没有data区、methods区和生命周期区
# 中间模板使用后需在程序中删除


==================================================baseTemplate(弃用)==================================================
# baseTemplate文件夹用于存放页面区模板，包括菜单区，搜索区，全局按钮区，数据区
# 目的是让生成的模板格式一致，同时规定生成模板的配套数据的变量命名保持统一
# 模板的template区 使用<hqTemplate>标签
# 模板的data区 使用<hqData>标签
# 模板的methods区 使用<hqMethods>标签
# 模板的style区 使用<hqStyle>标签

==================================================basePage.vue==================================================
basePage.vue是为了生成最终的vue文件做的模板，里面包含了生命周期函数，组件命名等内容

==================================================main.html==================================================
main.html是为了预览功能，可以在页面看到生成的页面大概有哪些东西






